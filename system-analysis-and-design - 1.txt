❍ 시스템 개발 환경
   • 정보시스템 분석 및 설계란 무엇인가?
   - 정보시스템 분석 및 설계(information systems analysis and design)는 주문처리, 급여지급 등과 같이 기본적인 비즈니스 기능들을 수행하는 정보시스템을 구축하고 유지관리 하는 방법이다,
   
   ▶ 주요 목적
   = 비즈니스 업무들에 대해 소프트웨어 솔루션을 적용함으로써 직원들의 업무 효율성을 높이는 것.
   = 즉, 조직의 구성원들이 보다 편하고 효율적으로 주요 업무를 수행할 수 있도록 도와줄 수 있는 소프트웨어들을 이용하여 조직의 시스템을 개선시키는 것.

   - 시스템 분석가는 이러한 소프트웨어들을 개발하는데 있어 중추적인 역할을 한다.

   ◆ 정보시스템 분석 및 설계는 다음과 같은 사항들에 기초함.
    = 조직의 목표, 구조, 프로세스에 대한 이해
    = 이익을 위하여 어떻게 정보기술을 활용하는지에 대한 지식
    → 시스템 분석가는 위와 같은 사항을 기반으로 분석과 설계를 수행한다.
    → 이러한 노력의 성과를 얻기 위해서는 구조적인 접근을 따라야 한다.

◆ 소프트웨어 개발 주기
    = 문제파악 → 요구사항 분석(요구사항 명세서) → 설계 (DB, program, UI 등) → 구현 → test → 운영/유지 보수
    = 이런 모델을 폭포수 모델이라 한다.
    = 개발 도중 오류가 발생하면 지나온 과정을 거쳐 올라가서 재수정을 하는데 이것을 feedback이라 한다.

   • 시스템 분석 및 설계 : 핵심 개념들
   ◆ 시스템 분석 및 설계의 주요 목적
   = 조직의 시스템을 개선시키는 것.
   - 이것은 응용소프트웨어의 개발이나 획득, 그리고 이것들에 대한 구성원들의 사용 훈련을 포함하기도 한다.
   - 응용소프트웨어는 시스템이라 불리기도 한다.

   ◆ 응용소프트웨어(application software)
   - 조직의 데이터(재고관리, 급여 등)를 처리하고 사용자를 지원하기 위해 설계된 소프트웨어
   - 조직의 특정 기능이나 프로세스를 지원하기 위해 설계된다.
   - 응용소프트웨어의 목적으로는 데이터를 정보로 변환하는 것.

   ◆ 정보시스템과 관련된 요소(응용소프트웨어 외)
   - 응용소프트웨어가 작동할 수 있는 하드웨어와 시스템 소프트웨어
    ▶ 시스템 소프트웨어 : 컴퓨터의 기능을 도와줌
    ▶ 응용소프트웨어 : 문서 작성, 인터넷 연결 등과 같은 사용자의 작업들을 도와줌.
   - 시스템 분석가에 의해 작성된 문서 및 교육자료.
   → 직원들에게 도움을 주기 위한 목적
   - 시스템 전반에 걸친 업무에 대한 특정 역할.
   - 부정 및 도난 방지를 위한 통제 소프트웨어
   - 업무 수행을 위해 소프트웨어를 사용하는 사람들.

◆ 방법론(methodologies)
   - 정보시스템의 구축을 도와주는 일련의 단계들로 구성된 접근방법이다.

   ◆ 기법(techniques)
   - 시스템 분석가로서 수행한 작업들이 사려깊고, 완전하고, 이해하기에 용이하다는 점을 프로젝트 팀원들에게 확신시키기 위해 준수하게 될 프로세스들이다.
   → 요약하면 시스템 분석가가 분석 및 설계를 용의주도하고, 완전하고, 포괄적으로 수행하기 위해 따르는 프로세스들이다.
   - 기법은 시스템의 기능을 결정하기 위한 다양한 작업들을 지원한다.

   ◆ 도구(tools)
   - 특정 기법을 쉽게 사용할 수 있도록 도와주는 CASE (Computer Aided Software Engineering) 도구와 같은 컴퓨터 프로그램을 의미한다.

   • 시스템
   - 하나의 사업단위 내에서 사용되는 상호 연관된 비즈니스 절차들(또는 요소들)의 집합인데, 이 절차들은 일정한 목적을 위해 서로 연동된다.


구성요소
(component)
- 더 이상 축소시킬 수 없는 부분이거나 부분들이 모인 하나의 집합. = 하위시스템(subsystem)
상호연관
(interrelated)
- 시스템의 한 구성요소가 한 개 이상의 다른 구성 요소들에 의존하는 것.
- 즉, 구성요소의 기능은 어느 정도 다른 구성요소의 기능과 관련되어 있다.
경계선
(boundary)
- 시스템의 내부와 외부를 표시해주며, 해당 조직의 다른 시스템들과 구분시켜주는 선.
- 경계선 안의 구성요소들은 변경시킬 수 있지만, 경계선 밖의 시스템들은 변경시킬 수 없다.
목적
(purpose)
- 시스템의 전반적인 목적 또는 기능
- 모든 구성요소들은 시스템의 특정 목적을 달성하기 위해 함께 작동하는데, 이것이 바로 시스템의 존재 이유라 할 수 있다.
환경
(environment)
- 시스템과 상호작용하는 시스템 외부의 모든 것.
- 환경은 시스템에 영향을 주는 경계선 밖의 모든 것.
- 일반적으로 시스템은 환경과 상호작용을 한다.
- 정보시스템은 환경으로부터 데이터(실제 사실)와 정보(유용한 형태로 가공된 데이터)를 수신하면서 상호작용한다.
인터페이스
(interface)
- 시스템과 환경이 만나거나 하위시스템들이 서로 만나는 지점.
입력물
(input)
- 시스템은 기능을 수행하기 위해 환경으로부터 입력물을 받아들인다.
산출물
(output)
- 시스템은 그 기능의 결과를 산출물로서 환경으로 다시 내보내고, 이를 통해 자신의 목적을 달성하게 된다.
제약조건
(constraint)
- 시스템이 달성할 수 있는 것에 대한 한계
- 시스템이 기능을 수행하는 데에는 제약조건이 따르기 마련이다.
- 환경 내에서 시스템이 할 수 있는 것과 목적을 달성할 수 있는 방법에는 한계(용량, 속도 능력과 관련하여)가 있기 때문이다.
- 제약 조건은 시스템 내/외부적으로 발생한다.
